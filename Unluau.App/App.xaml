<Application x:Class="Unluau.App.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Unluau.App"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <SolidColorBrush x:Key="Grayscale-100">#F3F4F8</SolidColorBrush>
            <SolidColorBrush x:Key="Grayscale-200">#D2D4DA</SolidColorBrush>
            <SolidColorBrush x:Key="Grayscale-300">#B3B5BD</SolidColorBrush>
            <SolidColorBrush x:Key="Grayscale-400">#9496A1</SolidColorBrush>
            <SolidColorBrush x:Key="Grayscale-500">#777986</SolidColorBrush>
            <SolidColorBrush x:Key="Grayscale-600">#5B5D6B</SolidColorBrush>
            <SolidColorBrush x:Key="Grayscale-700">#404256</SolidColorBrush>
            <SolidColorBrush x:Key="Grayscale-800">#282A3A</SolidColorBrush>
            <SolidColorBrush x:Key="Grayscale-900">#101223</SolidColorBrush>

            <SolidColorBrush x:Key="BrightGray">#EEEEEE</SolidColorBrush>
            <SolidColorBrush x:Key="ChineseSilver">#CCCCCC</SolidColorBrush>
            <SolidColorBrush x:Key="SpenishGray">#999999</SolidColorBrush>
            <SolidColorBrush x:Key="GraniteGray">#666666</SolidColorBrush>
            <SolidColorBrush x:Key="Charchoal">#3e3e3e</SolidColorBrush>
            <SolidColorBrush x:Key="LightCharchoal">#555555</SolidColorBrush>
            <SolidColorBrush x:Key="DarkCharchoal">#333333</SolidColorBrush>

            <Color x:Key="BrightGray-Color">#EEEEEE</Color>
            <Color x:Key="ChineseSilver-Color">#CCCCCC</Color>
            <Color x:Key="SpenishGray-Color">#999999</Color>
            <Color x:Key="GraniteGray-Color">#666666</Color>
            <Color x:Key="LightCharchoal-Color">#555555</Color>
            <Color x:Key="Charchoal-Color">#3e3e3e</Color>
            <Color x:Key="DarkCharchoal-Color">#333333</Color>

            <FontFamily x:Key="Default">Inter</FontFamily>

            <Style x:Key="menuParentStyle" TargetType="MenuItem">
                <Setter Property="Background" Value="{DynamicResource Charchoal}"/>
                <Setter Property="Foreground" Value="{DynamicResource SpenishGray}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource DarkCharchoal}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <SolidColorBrush x:Key="Menu.Static.Foreground" Color="{StaticResource SpenishGray-Color}"/>
            <SolidColorBrush x:Key="Menu.Static.Background" Color="{StaticResource DarkCharchoal-Color}"/>
            <SolidColorBrush x:Key="Menu.Static.Border" Color="Transparent"/>
            <Style x:Key="MenuItemStyle1" TargetType="{x:Type MenuItem}">
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Background" Value="{StaticResource DarkCharchoal}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource SpenishGray}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template" Value="{DynamicResource MenuItemControlTemplate1}"/>
                <Style.Triggers>
                    <Trigger Property="Role" Value="TopLevelHeader">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                        <Setter Property="Padding" Value="6,0"/>
                    </Trigger>
                    <Trigger Property="Role" Value="TopLevelItem">
                        <Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Border}"/>
                        <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                        <Setter Property="Padding" Value="6,0"/>
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" Value="{DynamicResource DarkCharchoal}" />
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin" Value="true">
                        <Setter Property="Background" Value="{DynamicResource DarkCharchoal}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <ControlTemplate x:Key="MenuItemControlTemplate1" TargetType="{x:Type MenuItem}">
                <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                    <Grid Margin="-1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                            <ColumnDefinition Width="13"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                        <Border x:Name="GlyphPanel" BorderBrush="#FF26A0DA" BorderThickness="0" Background="#3D26A0DA" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                            <Path x:Name="Glyph" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="#FF212121" FlowDirection="LeftToRight" Height="11" Width="10"/>
                        </Border>
                        <ContentPresenter x:Name="menuHeaderContainer" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        <TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="True">
                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource Charchoal}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                        <Setter Property="Fill" TargetName="Glyph" Value="#FF707070"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsHighlighted" Value="True"/>
                            <Condition Property="IsEnabled" Value="False"/>
                        </MultiTrigger.Conditions>
                    </MultiTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="MenuItemControlTemplate2" TargetType="{x:Type MenuItem}">
                <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                    <Grid VerticalAlignment="Center" Margin="0,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                        <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                        <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                            <Border x:Name="SubMenuBorder" Background="{StaticResource DarkCharchoal}" Padding="2">
                                <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas HorizontalAlignment="Left" Height="25" VerticalAlignment="Top" Width="0">
                                            <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                        </Canvas>
                                        <Rectangle Fill="#FFD7D7D7" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                        <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                    </Trigger>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="True">
                        <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource DarkCharchoal}"/>
                        <!--<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>-->
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                        <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
                    </Trigger>
                    <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                        <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                        <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Background" Value="{StaticResource LightCharchoal}" />
                <Setter Property="Padding" Value="10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent" Margin="0">
                                <StackPanel Margin="3" Orientation="Horizontal">
                                    <ContentPresenter ContentSource="Header"/>
                                    <Border x:Name="PART_CloseTab" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="7,0,0,0" Width="15" CornerRadius="5" MouseDown="PART_CloseTab_MouseDown">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="{StaticResource Charchoal}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <iconPacks:PackIconMaterial HorizontalAlignment="Center" VerticalAlignment="Center" Kind="Close" Width="7"/>
                                    </Border>
                                </StackPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource GraniteGray}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CustomTabControl" TargetType="{x:Type TabControl}">
                <Setter Property="TabStripPlacement" Value="Left" />
                <Setter Property="Margin" Value="2" />
                <Setter Property="Padding" Value="0"    />
                <Setter Property="Background" Value="{DynamicResource Charchoal}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Name="ColumnDefinition0" />
                                    <ColumnDefinition Width="0" Name="ColumnDefinition1" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" Name="RowDefinition0" />
                                    <RowDefinition Height="*" Name="RowDefinition1" />
                                </Grid.RowDefinitions>
                                <Border x:Name="HeaderBorder"
                            BorderBrush="Transparent"
                            BorderThickness="1"
                            CornerRadius="0"
                            Background="{StaticResource Charchoal}"
                            Margin="0,0,0,0">
                                    <TabPanel IsItemsHost="True"
                                  Name="HeaderPanel"
                                  Panel.ZIndex="1"
                                  KeyboardNavigation.TabIndex="1"
                                  Grid.Column="0"
                                  Grid.Row="0" />
                                </Border>
                                <Grid Name="ContentPanel"
                          KeyboardNavigation.TabIndex="2"
                          KeyboardNavigation.TabNavigation="Local"
                          KeyboardNavigation.DirectionalNavigation="Contained"
                          Grid.Column="0"
                          Grid.Row="1">
                                    <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0">
                                        <ContentPresenter Content="{TemplateBinding SelectedContent}"
                                              ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                              ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                              ContentSource="SelectedContent"
                                              Name="PART_SelectedContentHost"
                                              Margin="2"
                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    </Border>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                                    <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto" />
                                    <Setter TargetName="HeaderBorder" Property="FrameworkElement.Margin" Value="0,5,0,0" />
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                                    <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                                    <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto" />
                                    <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*" />
                                    <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
                                    <Setter TargetName="HeaderBorder" Property="FrameworkElement.Margin" Value="0,0,5,0" />
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                                    <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                                    <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*" />
                                    <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto" />
                                    <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
                                    <Setter TargetName="HeaderBorder" Property="FrameworkElement.Margin" Value="5,0,0,0" />
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
